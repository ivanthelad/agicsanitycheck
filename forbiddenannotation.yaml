apiVersion: templates.gatekeeper.sh/v1beta1
kind: ConstraintTemplate
metadata:
  name: k8sforbiddenannotations
  annotations:
    metadata.gatekeeper.sh/title: "Forbidden Annotations"
    metadata.gatekeeper.sh/version: 1.0.1
    description: >-
      Forbids resources to contain specified annotations if "kubernetes.io/ingress.class: azure/application-gateway" is set.
spec:
  crd:
    spec:
      names:
        kind: K8sForbiddenAnnotations
      validation:
        openAPIV3Schema:
          type: object
          properties:
            forbiddenAnnotations:
              type: array
              description: >-
                A list of annotations that the object must not specify.
              items:
                type: string
  targets:
    - target: admission.k8s.gatekeeper.sh
      rego: |
         package k8sforbiddenannotations

          allow {
            input.review.object.spec.ingressClassName == "azure-application-gateway"
          }
          allow {
          input.review.object.metadata.annotations["kubernetes.io/ingress.class"] == "azure/application-gateway"
          }
          
          
            violation[{"msg": msg, "details": {"forbidden_annotations": denied_annotations}}] {
                # iterate over all annotations in input
              # input.review.object.metadata.annotations["kubernetes.io/ingress.class"] == "azure/application-gateway"
                ## excluding the kubernetes.io/ingress.class annotation
                ## [key]: This is a comprehension that iterates over all keys in the annotations map
                input.review.object.metadata.annotations[key] 

                # for each key, check if it's present in deny list -
                # if using older OPA, you may need to use
                # `denied_annotations[key]` instead, which does the same
                # denied_annotations[key]    
                ## Assign variable 
                
                denied_annotations := input.parameters.forbiddenAnnotations
                denied_annotations[_] == key
                msg = sprintf("%s in denied annotations", [key])
            }